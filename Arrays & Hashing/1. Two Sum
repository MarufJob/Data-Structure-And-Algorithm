class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        int len = nums.size();
        
        for(int i=0; i<len-1; i++)
        {
            for(int j=i+1; j<len; j++)
            {
                if(nums[i]+nums[j]==target)
                return {i,j};
            }
        }
        return {};
    }
};





class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        int len = nums.size();
        unordered_map<int,int>mapNum;

        // Build the hash table
        for(int i=0; i<len; i++)
        {
           mapNum[nums[i]]=i;
        }

        // cout << "Sorted nums: ";
        // for (int num : nums) {
        //     cout << num << " ";
        // }
        // cout << endl;
        
        // for(int i=0,j=len-1; i<len-1; )
        // {
           
        // }
        return {};
    }
};
